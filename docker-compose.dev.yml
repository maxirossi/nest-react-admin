services:
  database:
    image: postgres:alpine
    container_name: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:5000"
    depends_on:
      - database
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      BACKEND_PORT: ${BACKEND_PORT}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_FIRST_NAME: ${ADMIN_FIRST_NAME}
      ADMIN_LAST_NAME: ${ADMIN_LAST_NAME}
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/yarn.lock:/app/yarn.lock
      - ./backend/ormconfig.js:/app/ormconfig.js
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/tsconfig.build.json:/app/tsconfig.build.json

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/craco.config.js:/app/craco.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_DEFAULT_PAGE_SIZE=10
      - REACT_APP_MAX_PAGE_SIZE=100
      - NODE_ENV=development

volumes:
  postgres_data:
